{"version":3,"sources":["components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.js","components/ErrorNotification/ErrorNotification.jsx","components/MoviesList/MoviesList.jsx"],"names":["SearchBar","state","value","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","target","this","onChange","type","autoComplete","Component","MoviesPage","movies","error","query","history","location","API","then","data","results","push","pathname","search","catch","ErrorNotification","text","message","MoviesList","items","API_KEY","getTrendingMovies","axios","get","getMoviesByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","map","i","key","to","title","name"],"mappings":"4MAwCeA,E,4MAhCbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAAAC,GACbA,EAAEC,iBADgB,IAEVH,EAAU,EAAKD,MAAfC,MACR,EAAKI,MAAMC,SAASL,GACpB,EAAKM,SAAS,CAAEN,MAAO,M,EAGzBO,aAAe,SAAAL,GAAM,IACXF,EAAUE,EAAEM,OAAZR,MACR,EAAKM,SAAS,CAAEN,W,uDAGR,IACAA,EAAUS,KAAKV,MAAfC,MACR,OACE,0BAAMK,SAAUI,KAAKR,cACnB,2BACES,SAAUD,KAAKF,aACfP,MAAOA,EACPW,KAAK,OACLC,aAAa,QAEf,4BAAQD,KAAK,UAAb,e,GA/BgBE,a,gBCMHC,E,4MAUnBf,MAAQ,CACNgB,OAAQ,GACRC,MAAO,M,EAGTf,aAAe,SAAAgB,GAAU,IAAD,EACQ,EAAKb,MAA3Bc,EADc,EACdA,QAASC,EADK,EACLA,SACjBC,IAAqBH,GAClBI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKhB,SAAS,CAAES,OAAQO,EAAKC,aAChDF,KACCH,EAAQM,KAAK,CACXC,SAAUN,EAASM,SACnBC,OAAO,SAAD,OAAWT,MAGpBU,OAAM,SAAAX,GACL,EAAKV,SAAS,CAAEU,c,uDAIZ,IAAD,EACmBP,KAAKV,MAAvBgB,EADD,EACCA,OAAQC,EADT,EACSA,MAChB,OACE,oCACGA,GAAS,kBAACY,EAAA,EAAD,CAAmBC,KAAMb,EAAMc,UAEzC,kBAAC,EAAD,CAAWzB,SAAUI,KAAKR,eAC1B,kBAAC8B,EAAA,EAAD,CAAYC,MAAOjB,S,GArCaF,c,gCCTxC,+LAEMoB,EAAU,mCAEHC,EAAoB,kBAC/BC,IAAMC,IAAN,gEAAmEH,KAExDI,EAAmB,SAAApB,GAAK,OACnCkB,IAAMC,IAAN,4DACuDH,EADvD,kBACwEhB,KAG7DqB,EAAkB,SAAAC,GAAE,OAC/BJ,IAAMC,IAAN,6CACwCG,EADxC,oBACsDN,EADtD,qBAIWO,EAAe,SAAAD,GAAE,OAC5BJ,IAAMC,IAAN,8CACyCG,EADzC,4BAC+DN,KAGpDQ,EAAkB,SAAAF,GAAE,OAC/BJ,IAAMC,IAAN,8CACyCG,EADzC,4BAC+DN,EAD/D,6B,gCCvBF,oBAIeL,IAFW,SAAAC,GAAI,OAAI,yCAAeA,K,gCCFjD,2BAuBeE,IAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,4BACGA,EAAMU,KAAI,SAAAC,GAAC,OACV,wBAAIC,IAAKD,EAAEJ,IACT,kBAAC,IAAD,CAAMM,GAAE,kBAAaF,EAAEJ,KAAOI,EAAEG,MAAQH,EAAEG,MAAQH,EAAEI","file":"static/js/movies-page.2a5b4fb6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport T from 'prop-types';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSubmit: T.func.isRequired,\n  };\n\n  state = {\n    value: '',\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { value } = this.state;\n    this.props.onSubmit(value);\n    this.setState({ value: '' });\n  };\n\n  handleChange = e => {\n    const { value } = e.target;\n    this.setState({ value });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          onChange={this.handleChange}\n          value={value}\n          type=\"text\"\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component } from 'react';\nimport T from 'prop-types';\n\nimport * as API from '../../services/moviesAPI';\n\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MoviesList from '../../components/MoviesList/MoviesList';\nimport ErrorNotification from '../../components/ErrorNotification/ErrorNotification';\n\nexport default class MoviesPage extends Component {\n  static propTypes = {\n    history: T.shape({\n      push: T.func.isRequired,\n    }).isRequired,\n    location: T.shape({\n      pathname: T.string.isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    movies: [],\n    error: null,\n  };\n\n  handleSubmit = query => {\n    const { history, location } = this.props;\n    API.getMoviesByQuery(query)\n      .then(({ data }) => this.setState({ movies: data.results }))\n      .then(\n        history.push({\n          pathname: location.pathname,\n          search: `query=${query}`,\n        }),\n      )\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { movies, error } = this.state;\n    return (\n      <>\n        {error && <ErrorNotification text={error.message} />}\n\n        <SearchBar onSubmit={this.handleSubmit} />\n        <MoviesList items={movies} />\n      </>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = '155381e5ea55326648abc3faf6598daf';\n\nexport const getTrendingMovies = () =>\n  axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n\nexport const getMoviesByQuery = query =>\n  axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n\nexport const getMovieDetails = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  );\n\nexport const getMovieCast = id =>\n  axios.get(\n    ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`,\n  );\n\nexport const getMovieReviews = id =>\n  axios.get(\n    ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n","import React from 'react';\n\nconst ErrorNotification = text => <h1>Oops some {text}</h1>;\n\nexport default ErrorNotification;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport T from 'prop-types';\n\nconst MoviesList = ({ items }) => (\n  <ul>\n    {items.map(i => (\n      <li key={i.id}>\n        <Link to={`/movies/${i.id}`}>{i.title ? i.title : i.name}</Link>\n      </li>\n    ))}\n  </ul>\n);\n\nMoviesList.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      id: T.number.isRequired,\n      title: T.string,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default MoviesList;\n"],"sourceRoot":""}