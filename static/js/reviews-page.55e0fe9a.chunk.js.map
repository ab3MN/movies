{"version":3,"sources":["components/Review/Review.jsx","pages/ReviewsPage/ReviewsPage.jsx","services/moviesAPI.js","components/ErrorNotification/ErrorNotification.jsx","helpers/getIdFromProps.js"],"names":["ReviewList","items","map","id","author","content","key","ReviewsPage","state","error","fetchReviews","getIdFromProps","props","API","then","data","setState","results","catch","this","ErrorNotification","text","length","Review","Component","API_KEY","getTrendingMovies","axios","get","getMoviesByQuery","query","getMovieDetails","getMovieCast","getMovieReviews","match","params"],"mappings":"oNAwBeA,EArBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjB,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,wBAAIC,IAAKH,GACP,4BAAKC,GACL,2BAAIC,S,QCFSE,E,4MACnBC,MAAQ,CACNP,MAAO,GACPQ,MAAO,M,EAOTC,aAAe,WACb,IAAMP,EAAKQ,YAAe,EAAKC,OAC/BC,IAAoBV,GACjBW,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAc,EAAKC,SAAS,CAAEf,MAAOc,EAAKE,aAC/CC,OAAM,SAAAT,GACL,EAAKO,SAAS,CAAEP,c,kEARpBU,KAAKT,iB,+BAYG,IAAD,EACkBS,KAAKX,MAAtBP,EADD,EACCA,MAAOQ,EADR,EACQA,MACf,OACE,oCACGA,GAAS,kBAACW,EAAA,EAAD,CAAmBC,KAAMZ,IAElCR,EAAMqB,OAAS,EACd,kBAACC,EAAD,CAAYtB,MAAOA,IAEnB,6E,GA5B+BuB,c,gCCNzC,+LAEMC,EAAU,mCAEHC,EAAoB,kBAC/BC,IAAMC,IAAN,gEAAmEH,KAExDI,EAAmB,SAAAC,GAAK,OACnCH,IAAMC,IAAN,4DACuDH,EADvD,kBACwEK,KAG7DC,EAAkB,SAAA5B,GAAE,OAC/BwB,IAAMC,IAAN,6CACwCzB,EADxC,oBACsDsB,EADtD,qBAIWO,EAAe,SAAA7B,GAAE,OAC5BwB,IAAMC,IAAN,8CACyCzB,EADzC,4BAC+DsB,KAGpDQ,EAAkB,SAAA9B,GAAE,OAC/BwB,IAAMC,IAAN,8CACyCzB,EADzC,4BAC+DsB,EAD/D,6B,gCCvBF,oBAIeL,IAFW,SAAAC,GAAI,OAAI,yCAAeA,K,gCCAlCV,IAFQ,SAAAC,GAAK,OAAIA,EAAMsB,MAAMC,OAAOhC","file":"static/js/reviews-page.55e0fe9a.chunk.js","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\n\nconst ReviewList = ({ items }) => (\n  <ul>\n    {items.map(({ id, author, content }) => (\n      <li key={id}>\n        <h3>{author}</h3>\n        <p>{content}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nReviewList.propTypes = {\n  items: T.arrayOf(\n    T.shape({\n      id: T.string.isRequired,\n      author: T.string.isRequired,\n      content: T.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default ReviewList;\n","import React, { Component } from 'react';\nimport * as API from '../../services/moviesAPI';\nimport getIdFromProps from '../../helpers/getIdFromProps';\nimport ReviewList from '../../components/Review/Review';\nimport ErrorNotification from '../../components/ErrorNotification/ErrorNotification';\n\nexport default class ReviewsPage extends Component {\n  state = {\n    items: [],\n    error: null,\n  };\n\n  componentDidMount() {\n    this.fetchReviews();\n  }\n\n  fetchReviews = () => {\n    const id = getIdFromProps(this.props);\n    API.getMovieReviews(id)\n      .then(({ data }) => this.setState({ items: data.results }))\n      .catch(error => {\n        this.setState({ error });\n      });\n  };\n\n  render() {\n    const { items, error } = this.state;\n    return (\n      <>\n        {error && <ErrorNotification text={error} />}\n\n        {items.length > 0 ? (\n          <ReviewList items={items} />\n        ) : (\n          <h3>We don&apos;t have any reviews for this movie</h3>\n        )}\n      </>\n    );\n  }\n}\n","import axios from 'axios';\n\nconst API_KEY = '155381e5ea55326648abc3faf6598daf';\n\nexport const getTrendingMovies = () =>\n  axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`);\n\nexport const getMoviesByQuery = query =>\n  axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n\nexport const getMovieDetails = id =>\n  axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`,\n  );\n\nexport const getMovieCast = id =>\n  axios.get(\n    ` https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`,\n  );\n\nexport const getMovieReviews = id =>\n  axios.get(\n    ` https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n  );\n","import React from 'react';\n\nconst ErrorNotification = text => <h1>Oops some {text}</h1>;\n\nexport default ErrorNotification;\n","const getIdFromProps = props => props.match.params.id;\n\nexport default getIdFromProps;\n"],"sourceRoot":""}